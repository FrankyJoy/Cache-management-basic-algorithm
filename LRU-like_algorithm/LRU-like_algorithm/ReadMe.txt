LRU(Least Recently Used Algorithm ,LRU):

	1. 原理
		如果一个数据在最近一段时间没有被访问到，那么在将来它被访问的可能性也很小

	2. 实现
		当需要插入新的数据项的时候，如果新数据项在链表中存在（一般称为命中），则把该节
		点移到链表头部，如果不存在，则新建一个节点，放到链表头部，若缓存满了，则把链表
		最后一个节点删除即可。在访问数据的时候，如果数据项在链表中存在，则把该节点移到
		链表头部，否则返回-1。

	3. 关键函数
		set(key,value):
			如果key在hashmap中存在，则先重置对应的value值，然后获取对应的节点cur，将cur
			节点从链表删除，并移动到链表头部；如果key在hashmap中不存在，则新建一个节点
			并将节点放到链表的头部，当Cache存满的时候，将链表最后一个节点删除即可。
		get(key):
			如果key在hashmap中存在，则把把对应的节点放到链表头部，并返回对应的value值；
			如果不存在则返回-1

	【本部分代码参考于 cnblog 海子的博客，仅供学习交流用。侵删】
